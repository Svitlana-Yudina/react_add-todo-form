{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","completed","id","classNames","TodoList","todos","map","username","userId","usersFromServer","find","App","useState","selectedName","setSelectedName","setTitle","visibleTodos","setVisibleTodos","isTitleEntred","setIsTitleEntred","isUserChoosed","setIsUserChoosed","action","method","type","placeholder","value","onChange","event","target","disabled","onClick","preventDefault","selectedUser","todoID","Math","max","prevTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1285c07b.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User,\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\n\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo,\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[],\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => <TodoInfo key={todo.id} todo={todo} />)}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [selectedName, setSelectedName] = useState('');\n  const [title, setTitle] = useState('');\n  const [visibleTodos, setVisibleTodos] = useState(todos);\n\n  const [isTitleEntred, setIsTitleEntred] = useState(true);\n  const [isUserChoosed, setIsUserChoosed] = useState(true);\n\n  const handleUpdatingTodos = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n\n    const selectedUser: User | null = usersFromServer\n      .find(user => (user.name === selectedName)) || null;\n\n    const todoID: number = Math\n      .max(...visibleTodos.map(todo => todo.id)) + 1;\n\n    if (selectedUser && title) {\n      setVisibleTodos((prevTodos) => {\n        return [\n          ...prevTodos,\n          {\n            id: todoID,\n            title,\n            completed: false,\n            userId: selectedUser.id,\n            user: selectedUser,\n          },\n        ];\n      });\n      setSelectedName('');\n      setTitle('');\n      setIsTitleEntred(true);\n      setIsUserChoosed(true);\n    } else {\n      setIsTitleEntred(false);\n      setIsUserChoosed(false);\n    }\n  };\n\n  const handleSelectUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedName(event.target.value);\n  };\n\n  const handleSetTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsTitleEntred(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\">\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            name=\"title\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleSetTitle}\n          />\n\n          {!title && !isTitleEntred\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={selectedName}\n            onChange={handleSelectUser}\n          >\n            <option value=\"\" disabled>\n              Choose a user\n            </option>\n\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.name}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {!selectedName && !isUserChoosed\n            && <span className=\"error\">Please choose a user</span>}\n\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={handleUpdatingTodos}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}